import { Provider } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as i0 from "@angular/core";
export declare const RATING_CONTROL_VALUE_ACCESSOR: Provider;
export declare class Ionic2Rating implements ControlValueAccessor {
    private _max;
    private _readOnly;
    private _emptyStarIconName;
    private _halfStarIconName;
    private _starIconName;
    private _nullable;
    get max(): string | number;
    set max(val: string | number);
    get readOnly(): any;
    set readOnly(val: any);
    get emptyStarIconName(): string;
    set emptyStarIconName(val: string);
    get halfStarIconName(): string;
    set halfStarIconName(val: string);
    get starIconName(): string;
    set starIconName(val: string);
    get nullable(): any;
    set nullable(val: any);
    private innerValue;
    starIndexes: Array<number>;
    onChangeCallback: (_: any) => void;
    ngOnInit(): void;
    createStarIndexes(): void;
    getStarIconName(starIndex: number): string;
    get value(): number;
    set value(value: number);
    writeValue(value: number): void;
    registerOnChange(fn: any): void;
    registerOnTouched(): void;
    onKeyDown(event: any): void;
    rate(value: number): void;
    private isTrueProperty;
    private getNumberPropertyValue;
    static ɵfac: i0.ɵɵFactoryDeclaration<Ionic2Rating, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<Ionic2Rating, "rating", never, { "max": "max"; "readOnly": "readOnly"; "emptyStarIconName": "emptyStarIconName"; "halfStarIconName": "halfStarIconName"; "starIconName": "starIconName"; "nullable": "nullable"; }, {}, never, never, false, never>;
}
